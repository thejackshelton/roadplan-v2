import{j as y,r as x,B as E,_ as b}from"./q-Cu9Su6G1.js";import{_hW as H}from"./q-Cu9Su6G1.js";import{H as j,I as _,J as T}from"./q-Cl1qwDo9.js";const k=async function(...s){const[d,p,i,h,a]=y(),n=s.length>0&&s[0]instanceof AbortSignal?s.shift():void 0;{const r=x(),w=s.map(t=>t instanceof SubmitEvent&&t.target instanceof HTMLFormElement?new FormData(t.target):t instanceof Event||t instanceof Node?null:t),c=a.getHash();let l="";const f={...d,method:i,headers:{...p,"Content-Type":"application/qwik-json","X-QRL":c},signal:n},m=await E([a,...w]);i==="GET"?l+=`&${T}=${encodeURIComponent(m)}`:f.body=m;const e=await fetch(`${h}?${j}=${c}${l}`,f),o=e.headers.get("Content-Type");if(e.ok&&o==="text/qwik-json-stream"&&e.body)return async function*(){try{for await(const t of _(e.body,r??document.documentElement,n))yield t}finally{n!=null&&n.aborted||await e.body.cancel()}}();if(o==="application/qwik-json"){const t=await e.text(),[u]=b(t,r??document.documentElement);if(e.status===500)throw u;return u}else if(o==="application/json"){const t=await e.json();if(e.status===500)throw t;return t}else if(o==="text/plain"||o==="text/html"){const t=await e.text();if(e.status===500)throw t;return t}}};export{H as _hW,k as s_sB08dtTLKl0};
